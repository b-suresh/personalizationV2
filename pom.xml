<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.iot.personalization</groupId>
  <artifactId>vertx</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>personalizationV2</name>
  <description>personalization microservice using Vertx.io</description>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
		  <!-- https://mvnrepository.com/artifact/io.fabric8/docker-maven-plugin -->
	    <groupId>io.fabric8</groupId>
	    <artifactId>docker-maven-plugin</artifactId>
	    <version>0.14.1</version>
		  <executions>
		    <execution>
		       <id>build</id>
		       <phase>package</phase>
		       <goals>
		         <!-- "build" should be used to create the images with the
		              artifact -->
		         <goal>build</goal>
		       </goals>
		    </execution>
		  </executions>
		  <configuration>
		     <images>
		        <!-- A single's image configuration -->
		        <image>
		        	<name>${docker.image}</name>
		        	<build>
		        		<from>vertx/vertx3</from>
		        		<tags>
		        			<tag>${project.version}</tag>
		        		</tags>
		        		<ports>
		        			<port>8080</port>
		        		</ports>
		        		<command>vertx run com.iot.personalization.vertx.SimpleRestHandler -cp /usr/verticles/${project.artifactId}-${project.version}.jar:/usr/verticles/personalization-0.0.1-SNAPSHOT.jar
		        		</command>
		        		<assembly>
		        			<mode>dir</mode>
		        			<basedir>/usr/verticles</basedir>
							<descriptorRef>artifact-with-dependencies</descriptorRef>
							<!-- 
							<dependencySets>
								<dependencySet>
									<includes>
										<include>:${project.artifactId}</include>
									</includes>
									<outputDirectory>.</outputDirectory>
								</dependencySet>
							</dependencySets> -->
		        		</assembly>
		        	</build>
		        </image>
		     </images>
		  </configuration>
		</plugin>
    </plugins>
  </build>
  <repositories>
  	<repository>
  		<id>mvnrepository</id>
  		<url>https://mvnrepository.com/</url>
  		<name>maven repository that has additional modules like vertx.io</name>
  		<snapshots>
  			<enabled>false</enabled>
  		</snapshots>
  		<releases>
  			<enabled>true</enabled>
  		</releases>
  	</repository>
  </repositories>
  <dependencies>
  	<dependency>
  		<groupId>io.vertx</groupId>
  		<artifactId>vertx-core</artifactId>
  		<version>3.3.0</version>
  	</dependency>
  	<dependency>
  		<groupId>io.vertx</groupId>
  		<artifactId>vertx-unit</artifactId>
  		<version>3.3.0</version>
  	</dependency>
  	<dependency>
  		<groupId>io.vertx</groupId>
  		<artifactId>vertx-web</artifactId>
  		<version>3.3.0</version>
  	</dependency>
  	<dependency>
  		<groupId>com.iot</groupId>
  		<artifactId>personalization</artifactId>
  		<version>0.0.1-SNAPSHOT</version>
  	</dependency>
  </dependencies>
  <properties>
  	<mainClass>com.iot.personalization.vertx.SimpleRestHandler</mainClass>
  	<docker.image>pervertxdocker</docker.image>
  </properties>
</project>